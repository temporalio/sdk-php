<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: temporal/api/workflowservice/v1/request_response.proto

namespace Temporal\Api\Workflowservice\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>temporal.api.workflowservice.v1.RespondWorkflowTaskFailedRequest</code>
 */
class RespondWorkflowTaskFailedRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The task token as received in `PollWorkflowTaskQueueResponse`
     *
     * Generated from protobuf field <code>bytes task_token = 1;</code>
     */
    protected $task_token = '';
    /**
     * Why did the task fail? It's important to note that many of the variants in this enum cannot
     * apply to worker responses. See the type's doc for more.
     *
     * Generated from protobuf field <code>.temporal.api.enums.v1.WorkflowTaskFailedCause cause = 2;</code>
     */
    protected $cause = 0;
    /**
     * Failure details
     *
     * Generated from protobuf field <code>.temporal.api.failure.v1.Failure failure = 3;</code>
     */
    protected $failure = null;
    /**
     * The identity of the worker/client
     *
     * Generated from protobuf field <code>string identity = 4;</code>
     */
    protected $identity = '';
    /**
     * Worker process' unique binary id
     *
     * Generated from protobuf field <code>string binary_checksum = 5;</code>
     */
    protected $binary_checksum = '';
    /**
     * Generated from protobuf field <code>string namespace = 6;</code>
     */
    protected $namespace = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $task_token
     *           The task token as received in `PollWorkflowTaskQueueResponse`
     *     @type int $cause
     *           Why did the task fail? It's important to note that many of the variants in this enum cannot
     *           apply to worker responses. See the type's doc for more.
     *     @type \Temporal\Api\Failure\V1\Failure $failure
     *           Failure details
     *     @type string $identity
     *           The identity of the worker/client
     *     @type string $binary_checksum
     *           Worker process' unique binary id
     *     @type string $namespace
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Temporal\Api\Workflowservice\V1\RequestResponse::initOnce();
        parent::__construct($data);
    }

    /**
     * The task token as received in `PollWorkflowTaskQueueResponse`
     *
     * Generated from protobuf field <code>bytes task_token = 1;</code>
     * @return string
     */
    public function getTaskToken()
    {
        return $this->task_token;
    }

    /**
     * The task token as received in `PollWorkflowTaskQueueResponse`
     *
     * Generated from protobuf field <code>bytes task_token = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTaskToken($var)
    {
        GPBUtil::checkString($var, False);
        $this->task_token = $var;

        return $this;
    }

    /**
     * Why did the task fail? It's important to note that many of the variants in this enum cannot
     * apply to worker responses. See the type's doc for more.
     *
     * Generated from protobuf field <code>.temporal.api.enums.v1.WorkflowTaskFailedCause cause = 2;</code>
     * @return int
     */
    public function getCause()
    {
        return $this->cause;
    }

    /**
     * Why did the task fail? It's important to note that many of the variants in this enum cannot
     * apply to worker responses. See the type's doc for more.
     *
     * Generated from protobuf field <code>.temporal.api.enums.v1.WorkflowTaskFailedCause cause = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setCause($var)
    {
        GPBUtil::checkEnum($var, \Temporal\Api\Enums\V1\WorkflowTaskFailedCause::class);
        $this->cause = $var;

        return $this;
    }

    /**
     * Failure details
     *
     * Generated from protobuf field <code>.temporal.api.failure.v1.Failure failure = 3;</code>
     * @return \Temporal\Api\Failure\V1\Failure|null
     */
    public function getFailure()
    {
        return $this->failure;
    }

    public function hasFailure()
    {
        return isset($this->failure);
    }

    public function clearFailure()
    {
        unset($this->failure);
    }

    /**
     * Failure details
     *
     * Generated from protobuf field <code>.temporal.api.failure.v1.Failure failure = 3;</code>
     * @param \Temporal\Api\Failure\V1\Failure $var
     * @return $this
     */
    public function setFailure($var)
    {
        GPBUtil::checkMessage($var, \Temporal\Api\Failure\V1\Failure::class);
        $this->failure = $var;

        return $this;
    }

    /**
     * The identity of the worker/client
     *
     * Generated from protobuf field <code>string identity = 4;</code>
     * @return string
     */
    public function getIdentity()
    {
        return $this->identity;
    }

    /**
     * The identity of the worker/client
     *
     * Generated from protobuf field <code>string identity = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setIdentity($var)
    {
        GPBUtil::checkString($var, True);
        $this->identity = $var;

        return $this;
    }

    /**
     * Worker process' unique binary id
     *
     * Generated from protobuf field <code>string binary_checksum = 5;</code>
     * @return string
     */
    public function getBinaryChecksum()
    {
        return $this->binary_checksum;
    }

    /**
     * Worker process' unique binary id
     *
     * Generated from protobuf field <code>string binary_checksum = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setBinaryChecksum($var)
    {
        GPBUtil::checkString($var, True);
        $this->binary_checksum = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string namespace = 6;</code>
     * @return string
     */
    public function getNamespace()
    {
        return $this->namespace;
    }

    /**
     * Generated from protobuf field <code>string namespace = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setNamespace($var)
    {
        GPBUtil::checkString($var, True);
        $this->namespace = $var;

        return $this;
    }

}


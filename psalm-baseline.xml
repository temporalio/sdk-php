<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.20.0@3f284e96c9d9be6fe6b15c79416e1d1903dcfef4">
  <file src="src/Activity.php">
    <ImplicitToStringCast>
      <code>$type</code>
    </ImplicitToStringCast>
  </file>
  <file src="src/Activity/ActivityInterface.php">
    <DeprecatedClass>
      <code>NamedArgumentConstructor</code>
    </DeprecatedClass>
  </file>
  <file src="src/Activity/ActivityMethod.php">
    <DeprecatedClass>
      <code>NamedArgumentConstructor</code>
    </DeprecatedClass>
  </file>
  <file src="src/Activity/ActivityOptions.php">
    <PossiblyNullReference>
      <code>mergeWith</code>
    </PossiblyNullReference>
    <PropertyTypeCoercion>
      <code>$type</code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Activity/LocalActivityInterface.php">
    <DeprecatedClass>
      <code>NamedArgumentConstructor</code>
    </DeprecatedClass>
  </file>
  <file src="src/Activity/LocalActivityOptions.php">
    <PossiblyNullReference>
      <code>mergeWith</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Client/ActivityCompletionClientInterface.php">
    <MissingParamType>
      <code>$details</code>
      <code>$details</code>
    </MissingParamType>
    <MissingReturnType>
      <code>recordHeartbeat</code>
      <code>recordHeartbeatByToken</code>
    </MissingReturnType>
  </file>
  <file src="src/Client/GRPC/BaseClient.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[(int)$waitRetry->totalMicroseconds]]></code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code><![CDATA[$retryOption->maximumInterval]]></code>
      <code>$waitRetry</code>
    </InvalidArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$ctx->getDeadline()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>getTimestamp</code>
    </PossiblyNullReference>
    <UnsafeInstantiation>
      <code>new static($client)</code>
      <code>new static($client)</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Client/GRPC/Context.php">
    <ArgumentTypeCoercion>
      <code>$format</code>
    </ArgumentTypeCoercion>
    <PossiblyInvalidArgument>
      <code>$timeout</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/Client/Interceptor/SystemInfoInterceptor.php">
    <ImpureFunctionCall>
      <code>$next($method, $arg, $ctx)</code>
      <code>$next($method, $arg, $ctx)</code>
    </ImpureFunctionCall>
    <ImpureMethodCall>
      <code>getCapabilities</code>
      <code>getInternalErrorDifferentiation</code>
      <code>getSignalAndQueryHeader</code>
      <code>getSystemInfo</code>
      <code>setServerCapabilities</code>
    </ImpureMethodCall>
    <InaccessibleProperty>
      <code><![CDATA[$this->systemInfoRequested]]></code>
    </InaccessibleProperty>
  </file>
  <file src="src/Client/Schedule/Action/StartWorkflowAction.php">
    <DocblockTypeContradiction>
      <code>$timeout === null</code>
      <code>$timeout === null</code>
      <code>$timeout === null</code>
    </DocblockTypeContradiction>
    <InaccessibleProperty>
      <code><![CDATA[$workflowType->name]]></code>
    </InaccessibleProperty>
    <InvalidPropertyAssignmentValue>
      <code>\Temporal\Interceptor\Header::empty()</code>
    </InvalidPropertyAssignmentValue>
    <RedundantConditionGivenDocblockType>
      <code>DateInterval::parse($timeout, DateInterval::FORMAT_SECONDS)</code>
      <code>DateInterval::parse($timeout, DateInterval::FORMAT_SECONDS)</code>
      <code>DateInterval::parse($timeout, DateInterval::FORMAT_SECONDS)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Client/Schedule/Info/ScheduleActionResult.php">
    <PropertyNotSetInConstructor>
      <code>$actualTime</code>
      <code>$scheduleTime</code>
      <code>$startWorkflowResult</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Client/Schedule/Info/ScheduleDescription.php">
    <PropertyNotSetInConstructor>
      <code>$conflictToken</code>
      <code>$info</code>
      <code>$memo</code>
      <code>$schedule</code>
      <code>$searchAttributes</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Client/Schedule/Info/ScheduleInfo.php">
    <MismatchingDocblockPropertyType>
      <code>array</code>
    </MismatchingDocblockPropertyType>
    <PropertyNotSetInConstructor>
      <code>$createdAt</code>
      <code>$lastUpdateAt</code>
      <code>$nextActionTimes</code>
      <code>$numActions</code>
      <code>$numActionsMissedCatchupWindow</code>
      <code>$numActionsSkippedOverlap</code>
      <code>$recentActions</code>
      <code>$runningWorkflows</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Client/Schedule/Info/ScheduleListEntry.php">
    <PropertyNotSetInConstructor>
      <code>$info</code>
      <code>$memo</code>
      <code>$scheduleId</code>
      <code>$searchAttributes</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Client/Schedule/Info/ScheduleListInfo.php">
    <PropertyNotSetInConstructor>
      <code>$futureActionTimes</code>
      <code>$notes</code>
      <code>$paused</code>
      <code>$recentActions</code>
      <code>$spec</code>
      <code>$workflowType</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Client/Schedule/ScheduleHandle.php">
    <PossiblyInvalidOperand>
      <code><![CDATA[$timestamp->getSeconds()]]></code>
    </PossiblyInvalidOperand>
    <PossiblyNullArgument>
      <code>$conflictToken</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Client/WorkflowClient.php">
    <ArgumentTypeCoercion>
      <code>$counter</code>
      <code>$workflowType</code>
      <code>$workflowType</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code>new AnnotationReader()</code>
    </DeprecatedClass>
    <InvalidReturnStatement>
      <code><![CDATA[new WorkflowProxy(
            $this,
            $this->newUntypedRunningWorkflowStub($workflowID, $runID, $workflow->getID()),
            $workflow
        )]]></code>
      <code><![CDATA[new WorkflowProxy(
            $this,
            $this->newUntypedWorkflowStub($workflow->getID(), $options),
            $workflow
        )]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>object</code>
      <code>object</code>
    </InvalidReturnType>
    <LessSpecificReturnStatement>
      <code>new self($serviceClient, $options, $converter, $interceptorProvider)</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>static</code>
    </MoreSpecificReturnType>
    <PossiblyNullArgument>
      <code><![CDATA[$workflowStub->getWorkflowType()]]></code>
      <code><![CDATA[$workflowStub->getWorkflowType()]]></code>
    </PossiblyNullArgument>
    <RedundantFunctionCall>
      <code>\sprintf</code>
      <code>\sprintf</code>
    </RedundantFunctionCall>
  </file>
  <file src="src/Client/WorkflowOptions.php">
    <ImpureMethodCall>
      <code>setFields</code>
      <code>setIndexedFields</code>
      <code>toPayload</code>
      <code>toPayload</code>
    </ImpureMethodCall>
    <PossiblyNullReference>
      <code>mergeWith</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Client/WorkflowStubInterface.php">
    <InvalidDocblock>
      <code>...mixed</code>
      <code>...mixed</code>
    </InvalidDocblock>
    <MissingParamType>
      <code>$args</code>
      <code>$args</code>
    </MissingParamType>
  </file>
  <file src="src/Common/CronSchedule.php">
    <DeprecatedClass>
      <code>NamedArgumentConstructor</code>
    </DeprecatedClass>
    <RedundantCast>
      <code><![CDATA[(string)$this->interval]]></code>
    </RedundantCast>
  </file>
  <file src="src/Common/MethodRetry.php">
    <DeprecatedClass>
      <code>NamedArgumentConstructor</code>
    </DeprecatedClass>
    <MissingImmutableAnnotation>
      <code>RetryOptions</code>
    </MissingImmutableAnnotation>
  </file>
  <file src="src/Common/RetryOptions.php">
    <PossiblyNullArgument>
      <code>$interval</code>
      <code>$interval</code>
      <code><![CDATA[DateInterval::toDuration($this->initialInterval)]]></code>
      <code><![CDATA[DateInterval::toDuration($this->maximumInterval)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Common/Uuid.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[\vsprintf('%s-%s-%s-%s-%s', [
            \substr($uuid, 0, 8),
            \substr($uuid, 8, 4),
            \substr($uuid, 12, 4),
            \substr($uuid, 16, 4),
            \substr($uuid, 20, 12),
        ])]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>non-empty-string</code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/DataConverter/DataConverter.php">
    <MissingImmutableAnnotation>
      <code>DataConverter</code>
    </MissingImmutableAnnotation>
    <PossiblyNullArgument>
      <code>$type</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/DataConverter/EncodedCollection.php">
    <InvalidArgument>
      <code>$name</code>
      <code>$value</code>
    </InvalidArgument>
    <MismatchingDocblockParamType>
      <code><![CDATA[iterable<array-key, Payload>]]></code>
    </MismatchingDocblockParamType>
    <MismatchingDocblockReturnType>
      <code>EncodedCollection</code>
      <code>EncodedCollection</code>
      <code>EncodedCollection</code>
    </MismatchingDocblockReturnType>
    <MoreSpecificImplementedParamType>
      <code>$type</code>
    </MoreSpecificImplementedParamType>
    <PossiblyNullReference>
      <code>fromPayload</code>
    </PossiblyNullReference>
  </file>
  <file src="src/DataConverter/EncodedValues.php">
    <InvalidNullableReturnType>
      <code>array</code>
    </InvalidNullableReturnType>
    <MissingClosureParamType>
      <code>$value</code>
    </MissingClosureParamType>
    <MoreSpecificImplementedParamType>
      <code>$type</code>
    </MoreSpecificImplementedParamType>
    <NullableReturnStatement>
      <code>$result</code>
      <code>$result</code>
    </NullableReturnStatement>
    <PossiblyNullArrayAccess>
      <code><![CDATA[$this->payloads[$index]]]></code>
    </PossiblyNullArrayAccess>
    <PossiblyNullIterator>
      <code><![CDATA[$this->values]]></code>
    </PossiblyNullIterator>
    <PossiblyNullReference>
      <code><![CDATA[$this->payloads]]></code>
    </PossiblyNullReference>
    <UnsafeInstantiation>
      <code>new static()</code>
      <code>new static()</code>
      <code>new static()</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/DataConverter/JsonConverter.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$type->getName()]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code>new AnnotationReader()</code>
    </DeprecatedClass>
    <PossiblyInvalidArgument>
      <code><![CDATA[$e->getCode()]]></code>
      <code><![CDATA[$e->getCode()]]></code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidPropertyFetch>
      <code><![CDATA[$data->name]]></code>
    </PossiblyInvalidPropertyFetch>
  </file>
  <file src="src/DataConverter/ProtoConverter.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$type->getName()]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/DataConverter/ProtoJsonConverter.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$type->getName()]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/DataConverter/ValuesInterface.php">
    <MissingReturnType>
      <code>setDataConverter</code>
    </MissingReturnType>
  </file>
  <file src="src/Exception/Client/ActivityCompletionException.php">
    <PossiblyInvalidArgument>
      <code><![CDATA[$e === null ? 0 : $e->getCode()]]></code>
      <code><![CDATA[$e->getCode()]]></code>
      <code><![CDATA[$e->getCode()]]></code>
    </PossiblyInvalidArgument>
    <PossiblyNullReference>
      <code>getID</code>
    </PossiblyNullReference>
    <UnsafeInstantiation>
      <code><![CDATA[new static(
            $e->getMessage(),
            $e->getCode(),
            $e
        )]]></code>
      <code><![CDATA[new static(
            self::buildMessage(
                [
                    'workflowId' => $info->workflowExecution->getID(),
                    'runId' => $info->workflowExecution->getRunID(),
                    'activityId' => $info->id,
                    'activityType' => $info->type->name,
                ]
            ),
            $e === null ? 0 : $e->getCode(),
            $e
        )]]></code>
      <code><![CDATA[new static('', $e->getCode(), $e)]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Exception/Client/WorkflowException.php">
    <UnsafeInstantiation>
      <code>new static(null, $execution, $workflowType, $previous)</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Exception/DoNotCompleteOnResultException.php">
    <UnsafeInstantiation>
      <code>new static(static::DEFAULT_ERROR_MESSAGE)</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Exception/ExceptionInterceptor.php">
    <LessSpecificReturnStatement>
      <code>new self([\Error::class])</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>static</code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Exception/Failure/FailureConverter.php">
    <InvalidNullableReturnType>
      <code>Failure</code>
    </InvalidNullableReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$e->getFailure()]]></code>
    </NullableReturnStatement>
    <PossiblyInvalidArgument>
      <code><![CDATA[$info->getInitiatedEventId()]]></code>
      <code><![CDATA[$info->getScheduledEventId()]]></code>
      <code><![CDATA[$info->getStartedEventId()]]></code>
      <code><![CDATA[$info->getStartedEventId()]]></code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$e->getOriginalStackTrace()]]></code>
      <code><![CDATA[$failure->getCause()]]></code>
      <code><![CDATA[$info->getDetails()]]></code>
      <code><![CDATA[$info->getDetails()]]></code>
      <code><![CDATA[$info->getLastHeartbeatDetails()]]></code>
      <code><![CDATA[$info->getLastHeartbeatDetails()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>getName</code>
      <code>getName</code>
      <code>getNonRetryable</code>
      <code>getScheduledEventId</code>
      <code>getStackTrace</code>
      <code>getWorkflowExecution</code>
      <code>getWorkflowId</code>
      <code>hasDetails</code>
      <code>hasDetails</code>
      <code>hasLastHeartbeatDetails</code>
      <code>hasLastHeartbeatDetails</code>
      <code>setStackTrace</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Exception/Failure/TemporalFailure.php">
    <MissingClosureParamType>
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </MissingClosureParamType>
    <MissingClosureReturnType>
      <code><![CDATA[fn ($value) => RetryState::name($value)]]></code>
      <code><![CDATA[fn ($value) => TimeoutType::name($value)]]></code>
      <code><![CDATA[fn ($value) => TimeoutType::name($value)]]></code>
    </MissingClosureReturnType>
  </file>
  <file src="src/Interceptor/Header.php">
    <MethodSignatureMismatch>
      <code>Header</code>
    </MethodSignatureMismatch>
    <MissingImmutableAnnotation>
      <code>Header</code>
    </MissingImmutableAnnotation>
  </file>
  <file src="src/Internal/Activity/ActivityContext.php">
    <PossiblyNullReference>
      <code>getValue</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Internal/Assert.php">
    <MissingClosureParamType>
      <code>$v</code>
      <code>$v</code>
    </MissingClosureParamType>
  </file>
  <file src="src/Internal/Client/ActivityCompletionClient.php">
    <MissingParamType>
      <code>$details</code>
      <code>$details</code>
    </MissingParamType>
  </file>
  <file src="src/Internal/Client/WorkflowProxy.php">
    <ImplicitToStringCast>
      <code><![CDATA[$query->getReturnType()]]></code>
    </ImplicitToStringCast>
    <InvalidNullableReturnType>
      <code>WorkflowStubInterface</code>
    </InvalidNullableReturnType>
    <InvalidReturnStatement>
      <code><![CDATA[$this->prototype->getReturnType()]]></code>
    </InvalidReturnStatement>
    <NullableReturnStatement>
      <code><![CDATA[$this->stub]]></code>
    </NullableReturnStatement>
    <PossiblyNullReference>
      <code>getHandler</code>
      <code>getHandler</code>
      <code>getQueryHandlers</code>
      <code>getReturnType</code>
      <code>query</code>
      <code>signal</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Internal/Client/WorkflowStarter.php">
    <InvalidArgument>
      <code>$header</code>
      <code>$header</code>
    </InvalidArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$options->retryOptions ? $options->retryOptions->toWorkflowRetryPolicy() : null]]></code>
      <code><![CDATA[$options->toMemo($this->converter)]]></code>
      <code><![CDATA[$options->toSearchAttributes($this->converter)]]></code>
      <code><![CDATA[DateInterval::toDuration($options->workflowExecutionTimeout)]]></code>
      <code><![CDATA[DateInterval::toDuration($options->workflowRunTimeout)]]></code>
      <code><![CDATA[DateInterval::toDuration($options->workflowTaskTimeout)]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>getName</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Internal/Client/WorkflowStub.php">
    <InvalidPropertyAssignmentValue>
      <code>Header::empty()</code>
    </InvalidPropertyAssignmentValue>
    <MissingParamType>
      <code>$args</code>
      <code>$args</code>
    </MissingParamType>
    <PossiblyInvalidArgument>
      <code><![CDATA[$closeEvent->getTaskId()]]></code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$attr->getDetails()]]></code>
      <code><![CDATA[$attr->getFailure()]]></code>
      <code><![CDATA[$attr->getResult()]]></code>
      <code><![CDATA[$input->workflowType]]></code>
      <code><![CDATA[$result->getQueryResult()]]></code>
      <code><![CDATA[$this->execution]]></code>
      <code><![CDATA[$this->execution]]></code>
      <code><![CDATA[$this->execution]]></code>
      <code><![CDATA[$this->execution]]></code>
      <code><![CDATA[$this->execution]]></code>
      <code><![CDATA[$this->execution]]></code>
      <code><![CDATA[$this->execution]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>getEvents</code>
      <code>getEvents</code>
      <code>getFailure</code>
      <code>getNewExecutionRunId</code>
      <code>getReason</code>
      <code>getRetryState</code>
      <code>getStatus</code>
      <code>hasDetails</code>
      <code>hasResult</code>
      <code>toProtoWorkflowExecution</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Internal/Declaration/Dispatcher/AutowiredPayloads.php">
    <PossiblyInvalidArgument>
      <code><![CDATA[$e->getCode()]]></code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/Internal/Declaration/Dispatcher/Dispatcher.php">
    <InvalidReturnType>
      <code>FunctionExecutor</code>
    </InvalidReturnType>
    <MismatchingDocblockReturnType>
      <code>FunctionExecutor</code>
    </MismatchingDocblockReturnType>
    <PropertyNotSetInConstructor>
      <code>$executor</code>
      <code>$types</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Internal/Declaration/Graph/ClassNode.php">
    <InvalidReturnType>
      <code><![CDATA[\Traversable<ClassNode, \ReflectionMethod>]]></code>
      <code><![CDATA[\Traversable<ClassNode>]]></code>
    </InvalidReturnType>
    <MissingClosureReturnType>
      <code>static function () use ($boxed) {</code>
    </MissingClosureReturnType>
    <RedundantCondition>
      <code><![CDATA[$this->class->getTraits()]]></code>
    </RedundantCondition>
    <TypeDoesNotContainNull>
      <code>[]</code>
    </TypeDoesNotContainNull>
  </file>
  <file src="src/Internal/Declaration/Graph/NodeInterface.php">
    <InvalidDocblock>
      <code>interface NodeInterface extends \Stringable, \IteratorAggregate, \Countable</code>
    </InvalidDocblock>
    <MissingTemplateParam>
      <code>\IteratorAggregate</code>
    </MissingTemplateParam>
  </file>
  <file src="src/Internal/Declaration/Instantiator/ActivityInstantiator.php">
    <InvalidDocblock>
      <code>final class ActivityInstantiator extends Instantiator</code>
    </InvalidDocblock>
    <PossiblyNullArgument>
      <code><![CDATA[$this->getInstance($prototype)]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Internal/Declaration/Instantiator/Instantiator.php">
    <MissingTemplateParam>
      <code>InstantiatorInterface</code>
    </MissingTemplateParam>
  </file>
  <file src="src/Internal/Declaration/Instantiator/InstantiatorInterface.php">
    <InvalidTemplateParam>
      <code>TPrototype</code>
    </InvalidTemplateParam>
  </file>
  <file src="src/Internal/Declaration/Instantiator/WorkflowInstantiator.php">
    <InvalidDocblock>
      <code>final class WorkflowInstantiator extends Instantiator</code>
    </InvalidDocblock>
    <PossiblyNullArgument>
      <code><![CDATA[$this->getInstance($prototype)]]></code>
    </PossiblyNullArgument>
    <RedundantCondition>
      <code>$class !== null</code>
    </RedundantCondition>
  </file>
  <file src="src/Internal/Declaration/Prototype/Prototype.php">
    <InvalidReturnStatement>
      <code>$prototype</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>T|null</code>
    </InvalidReturnType>
    <RedundantCondition>
      <code>$reflection</code>
    </RedundantCondition>
  </file>
  <file src="src/Internal/Declaration/Prototype/WorkflowPrototype.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$this->queryHandlers]]></code>
      <code><![CDATA[$this->signalHandlers]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Internal/Declaration/Reader/ActivityReader.php">
    <ArgumentTypeCoercion>
      <code>$contextualRetry</code>
      <code>$name</code>
      <code>$retry</code>
    </ArgumentTypeCoercion>
    <RawObjectIteration>
      <code>$group</code>
    </RawObjectIteration>
    <RedundantConditionGivenDocblockType>
      <code>$retry !== null</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Internal/Declaration/Reader/WorkflowReader.php">
    <ArgumentTypeCoercion>
      <code>$class</code>
      <code>$contextualRetry</code>
      <code>$method</code>
      <code>$name</code>
      <code>$retry</code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code>\reset($prototypes)</code>
    </InvalidArgument>
    <InvalidReturnType>
      <code><![CDATA[\Traversable<ActivityPrototype>]]></code>
    </InvalidReturnType>
    <RawObjectIteration>
      <code>$group</code>
      <code>$group</code>
    </RawObjectIteration>
    <RedundantConditionGivenDocblockType>
      <code>$retry !== null</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Internal/Declaration/WorkflowInstance.php">
    <MissingClosureReturnType>
      <code>function (QueryInput $input) use ($fn) {</code>
      <code>function (QueryInput $input) use ($fn) {</code>
    </MissingClosureReturnType>
    <MoreSpecificImplementedParamType>
      <code>$handler</code>
      <code>$name</code>
    </MoreSpecificImplementedParamType>
    <PropertyNotSetInConstructor>
      <code>$queryExecutor</code>
    </PropertyNotSetInConstructor>
    <PropertyTypeCoercion>
      <code><![CDATA[$this->queryHandlers]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Internal/Declaration/WorkflowInstance/SignalQueue.php">
    <ArgumentTypeCoercion>
      <code>$signal</code>
      <code>$signal</code>
    </ArgumentTypeCoercion>
    <MissingConstructor>
      <code>$onSignal</code>
    </MissingConstructor>
  </file>
  <file src="src/Internal/Events/EventEmitterInterface.php">
    <InvalidTemplateParam>
      <code>T</code>
    </InvalidTemplateParam>
  </file>
  <file src="src/Internal/Events/EventEmitterTrait.php">
    <LessSpecificImplementedReturnType>
      <code>self</code>
      <code>self</code>
    </LessSpecificImplementedReturnType>
    <PossiblyNullFunctionCall>
      <code>$callback(...$arguments)</code>
    </PossiblyNullFunctionCall>
  </file>
  <file src="src/Internal/Events/EventListenerInterface.php">
    <InvalidTemplateParam>
      <code>T</code>
    </InvalidTemplateParam>
  </file>
  <file src="src/Internal/Interceptor/Pipeline.php">
    <ImpureFunctionCall>
      <code><![CDATA[$this->last]]></code>
      <code><![CDATA[($this->last)(...$arguments)]]></code>
    </ImpureFunctionCall>
    <PropertyNotSetInConstructor>
      <code>$last</code>
      <code>$method</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Internal/Mapper/ScheduleMapper.php">
    <PossiblyNullArgument>
      <code><![CDATA[$dto->action]]></code>
    </PossiblyNullArgument>
    <RedundantCondition>
      <code><![CDATA[$action->header?->setDataConverter($this->converter)]]></code>
      <code><![CDATA[$action->input?->setDataConverter($this->converter)]]></code>
      <code><![CDATA[$action->memo?->setDataConverter($this->converter)]]></code>
      <code><![CDATA[$action->searchAttributes?->setDataConverter($this->converter)]]></code>
    </RedundantCondition>
    <TypeDoesNotContainNull>
      <code><![CDATA[$action->header]]></code>
      <code><![CDATA[$action->input]]></code>
      <code><![CDATA[$action->memo]]></code>
      <code><![CDATA[$action->searchAttributes]]></code>
    </TypeDoesNotContainNull>
    <UndefinedInterfaceMethod>
      <code>setDataConverter</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Internal/Marshaller/Mapper/AttributeMapper.php">
    <MissingClosureParamType>
      <code>$value</code>
    </MissingClosureParamType>
    <PossiblyNullArrayOffset>
      <code><![CDATA[$this->getters]]></code>
      <code><![CDATA[$this->setters]]></code>
    </PossiblyNullArrayOffset>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$marshal->name]]></code>
      <code><![CDATA[$marshal->name]]></code>
    </PossiblyNullPropertyFetch>
    <UnnecessaryVarAnnotation>
      <code>Marshal</code>
    </UnnecessaryVarAnnotation>
  </file>
  <file src="src/Internal/Marshaller/Meta/Marshal.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->name]]></code>
      <code>$type</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code>NamedArgumentConstructor</code>
    </DeprecatedClass>
  </file>
  <file src="src/Internal/Marshaller/Meta/MarshalArray.php">
    <DeprecatedClass>
      <code>NamedArgumentConstructor</code>
    </DeprecatedClass>
  </file>
  <file src="src/Internal/Marshaller/Meta/MarshalDateTime.php">
    <DeprecatedClass>
      <code>NamedArgumentConstructor</code>
    </DeprecatedClass>
  </file>
  <file src="src/Internal/Marshaller/Meta/MarshalNullable.php">
    <ArgumentTypeCoercion>
      <code>$rule</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code>NamedArgumentConstructor</code>
    </DeprecatedClass>
  </file>
  <file src="src/Internal/Marshaller/Meta/MarshalOneOf.php">
    <DeprecatedClass>
      <code>NamedArgumentConstructor</code>
    </DeprecatedClass>
  </file>
  <file src="src/Internal/Marshaller/Meta/Scope.php">
    <DeprecatedClass>
      <code>NamedArgumentConstructor</code>
    </DeprecatedClass>
  </file>
  <file src="src/Internal/Marshaller/ProtoToArrayConverter.php">
    <FalsableReturnStatement>
      <code><![CDATA[DateTimeImmutable::createFromFormat(
                'U.u',
                \sprintf('%d.%d', $input->getSeconds(), $input->getNanos() / 1000),
            )]]></code>
    </FalsableReturnStatement>
    <InvalidFalsableReturnType>
      <code>DateTimeImmutable</code>
    </InvalidFalsableReturnType>
    <InvalidReturnStatement>
      <code><![CDATA[\Temporal\Interceptor\Header::fromPayloadCollection($input->getFields(), $this->converter)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>HeaderInterface</code>
    </InvalidReturnType>
    <LessSpecificReturnStatement>
      <code>$mapper</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>null|\Closure(Message): mixed</code>
    </MoreSpecificReturnType>
    <PossiblyFalseArgument>
      <code><![CDATA[$now->modify(
                        \sprintf('+%d seconds +%d microseconds', $input->getSeconds(), $input->getNanos() / 1000)
                    )]]></code>
    </PossiblyFalseArgument>
  </file>
  <file src="src/Internal/Marshaller/Type/ArrayType.php">
    <DocblockTypeContradiction>
      <code>\is_array($value)</code>
    </DocblockTypeContradiction>
    <MoreSpecificImplementedParamType>
      <code>$current</code>
      <code>$value</code>
      <code>$value</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/Internal/Marshaller/Type/DateIntervalType.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->format]]></code>
      <code><![CDATA[$this->format]]></code>
    </ArgumentTypeCoercion>
    <InvalidNullableReturnType>
      <code>int|Duration</code>
    </InvalidNullableReturnType>
    <InvalidOperand>
      <code>$value * 1000000000</code>
      <code>($value * 1000000000) % 1000000000</code>
      <code><![CDATA[DateInterval::parse($value, $this->format)->totalMicroseconds * 1000]]></code>
    </InvalidOperand>
    <NullableReturnStatement>
      <code><![CDATA[match (true) {
                $value instanceof \DateInterval => DateInterval::toDuration($value),
                \is_int($value) => (new Duration())->setSeconds($value),
                \is_string($value) => (new Duration())->setSeconds((int)$value),
                \is_float($value) => (new Duration())
                    ->setSeconds((int)$value)
                    ->setNanos(($value * 1000000000) % 1000000000),
                default => throw new \InvalidArgumentException('Invalid value type.'),
            }]]></code>
    </NullableReturnStatement>
  </file>
  <file src="src/Internal/Marshaller/Type/EnumType.php">
    <PropertyTypeCoercion>
      <code>$class</code>
    </PropertyTypeCoercion>
    <UndefinedMethod>
      <code><![CDATA[$this->classFQCN::from($value)]]></code>
      <code><![CDATA[$this->classFQCN::from($value['value'])]]></code>
    </UndefinedMethod>
  </file>
  <file src="src/Internal/Marshaller/Type/ObjectType.php">
    <InvalidPropertyAssignmentValue>
      <code>new \ReflectionClass($class ?? stdClass::class)</code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement>
      <code><![CDATA[$this->reflection->getName() === stdClass::class
            ? (object)$data
            : $this->marshaller->unmarshal($data, $this->reflection->newInstanceWithoutConstructor())]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>TClass</code>
    </InvalidReturnType>
  </file>
  <file src="src/Internal/Marshaller/Type/OneOfType.php">
    <InvalidReturnType>
      <code>array</code>
    </InvalidReturnType>
  </file>
  <file src="src/Internal/Marshaller/Type/Type.php">
    <ArgumentTypeCoercion>
      <code>$typeClass</code>
      <code>$typeClass</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Internal/Marshaller/TypeFactory.php">
    <InvalidArgument>
      <code><![CDATA[$this->getDefaultMatchers()]]></code>
    </InvalidArgument>
    <InvalidReturnStatement>
      <code>$matcher::match($type)
                    ? $matcher
                    : null</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>?string</code>
      <code><![CDATA[iterable<class-string<DetectableTypeInterface>>]]></code>
    </InvalidReturnType>
    <LessSpecificReturnStatement>
      <code>$result</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>?string</code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Internal/Queue/ArrayQueue.php">
    <InvalidDocblock>
      <code>protected array $commands = [];</code>
    </InvalidDocblock>
  </file>
  <file src="src/Internal/Queue/QueueInterface.php">
    <InvalidDocblock>
      <code>interface QueueInterface extends \IteratorAggregate, \Countable</code>
    </InvalidDocblock>
    <MissingTemplateParam>
      <code>\IteratorAggregate</code>
    </MissingTemplateParam>
  </file>
  <file src="src/Internal/Repository/ArrayRepository.php">
    <InvalidReturnStatement>
      <code><![CDATA[$this->entries[$id] ?? null]]></code>
    </InvalidReturnStatement>
    <UnsafeInstantiation>
      <code><![CDATA[new static(\array_filter($this->entries, $filter))]]></code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Internal/Repository/RepositoryInterface.php">
    <InvalidDocblock>
      <code>interface RepositoryInterface extends \IteratorAggregate, \Countable</code>
    </InvalidDocblock>
    <MissingTemplateParam>
      <code>\IteratorAggregate</code>
    </MissingTemplateParam>
  </file>
  <file src="src/Internal/Support/DateInterval.php">
    <InvalidConstantAssignmentValue>
      <code>AVAILABLE_FORMATS = [
        self::FORMAT_YEARS,
        self::FORMAT_MONTHS,
        self::FORMAT_WEEKS,
        self::FORMAT_DAYS,
        self::FORMAT_HOURS,
        self::FORMAT_MINUTES,
        self::FORMAT_SECONDS,
        self::FORMAT_MILLISECONDS,
        self::FORMAT_MICROSECONDS,
        self::FORMAT_NANOSECONDS,
    ]</code>
    </InvalidConstantAssignmentValue>
    <InvalidOperand>
      <code>$interval / 1000</code>
    </InvalidOperand>
  </file>
  <file src="src/Internal/Support/DateTime.php">
    <InvalidReturnStatement>
      <code>$time</code>
      <code><![CDATA[match ($class) {
            \DateTimeImmutable::class => new \DateTimeImmutable($time, $tz),
            \DateTime::class => new \DateTime($time, $tz),
            CarbonImmutable::class => CarbonImmutable::parse($time, $tz),
            default => Carbon::parse($time, $tz),
        }]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>TReturn</code>
    </InvalidReturnType>
    <PossiblyInvalidArgument>
      <code>$tz</code>
      <code>$tz</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument>
      <code>$time</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Internal/Support/Diff.php">
    <MissingClosureParamType>
      <code>$_</code>
    </MissingClosureParamType>
    <PropertyTypeCoercion>
      <code><![CDATA[$reflection->getName()]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Internal/Support/Facade.php">
    <InvalidDocblock>
      <code><![CDATA[object<T>|null]]></code>
      <code>private static ?object $ctx = null;</code>
      <code>public static function getCurrentContext(): object</code>
    </InvalidDocblock>
  </file>
  <file src="src/Internal/Support/Inheritance.php">
    <PossiblyFalseArgument>
      <code>$implements</code>
      <code>$used</code>
    </PossiblyFalseArgument>
  </file>
  <file src="src/Internal/Support/Options.php">
    <UnsafeInstantiation>
      <code>new static()</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Internal/Support/StackRenderer.php">
    <PossiblyInvalidArgument>
      <code>$path</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/Internal/Traits/CloneWith.php">
    <RawObjectIteration>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
      <code>$this</code>
    </RawObjectIteration>
  </file>
  <file src="src/Internal/Transport/Client.php">
    <InternalClass>
      <code>self::ERROR_REQUEST_ID_DUPLICATION</code>
      <code>self::ERROR_REQUEST_NOT_FOUND</code>
    </InternalClass>
    <InternalMethod>
      <code>fetch</code>
      <code>get</code>
      <code>reject</code>
      <code>request</code>
    </InternalMethod>
    <InternalProperty>
      <code><![CDATA[$this->requests]]></code>
    </InternalProperty>
    <PossiblyInvalidArgument>
      <code><![CDATA[$command->getID()]]></code>
      <code><![CDATA[$command->getID()]]></code>
      <code><![CDATA[$command->getID()]]></code>
    </PossiblyInvalidArgument>
    <PossiblyNullReference>
      <code>getInfo</code>
    </PossiblyNullReference>
    <RedundantCondition>
      <code>$info !== null</code>
    </RedundantCondition>
  </file>
  <file src="src/Internal/Transport/CompletableResult.php">
    <MoreSpecificImplementedParamType>
      <code>$onFulfilled</code>
      <code>$onRejected</code>
    </MoreSpecificImplementedParamType>
    <PossiblyNullArgument>
      <code><![CDATA[$this->wrapContext($onFulfilledOrRejected)]]></code>
      <code><![CDATA[$this->wrapContext($onRejected)]]></code>
      <code>$value</code>
    </PossiblyNullArgument>
    <TooManyTemplateParams>
      <code><![CDATA[PromiseInterface<T>]]></code>
    </TooManyTemplateParams>
    <UndefinedInterfaceMethod>
      <code>cancel</code>
      <code>catch</code>
      <code>finally</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Internal/Transport/CompletableResultInterface.php">
    <TooManyTemplateParams>
      <code>PromiseInterface</code>
    </TooManyTemplateParams>
  </file>
  <file src="src/Internal/Transport/Request/Cancel.php">
    <MissingImmutableAnnotation>
      <code>Cancel</code>
    </MissingImmutableAnnotation>
  </file>
  <file src="src/Internal/Transport/Request/CancelExternalWorkflow.php">
    <MissingImmutableAnnotation>
      <code>CancelExternalWorkflow</code>
    </MissingImmutableAnnotation>
  </file>
  <file src="src/Internal/Transport/Request/CompleteWorkflow.php">
    <MissingImmutableAnnotation>
      <code>CompleteWorkflow</code>
    </MissingImmutableAnnotation>
  </file>
  <file src="src/Internal/Transport/Request/ContinueAsNew.php">
    <MissingImmutableAnnotation>
      <code>ContinueAsNew</code>
    </MissingImmutableAnnotation>
  </file>
  <file src="src/Internal/Transport/Request/ExecuteActivity.php">
    <MissingImmutableAnnotation>
      <code>ExecuteActivity</code>
    </MissingImmutableAnnotation>
  </file>
  <file src="src/Internal/Transport/Request/ExecuteChildWorkflow.php">
    <MissingImmutableAnnotation>
      <code>ExecuteChildWorkflow</code>
    </MissingImmutableAnnotation>
  </file>
  <file src="src/Internal/Transport/Request/ExecuteLocalActivity.php">
    <MissingImmutableAnnotation>
      <code>ExecuteLocalActivity</code>
    </MissingImmutableAnnotation>
  </file>
  <file src="src/Internal/Transport/Request/GetChildWorkflowExecution.php">
    <MissingImmutableAnnotation>
      <code>GetChildWorkflowExecution</code>
    </MissingImmutableAnnotation>
  </file>
  <file src="src/Internal/Transport/Request/GetVersion.php">
    <MissingImmutableAnnotation>
      <code>GetVersion</code>
    </MissingImmutableAnnotation>
  </file>
  <file src="src/Internal/Transport/Request/NewTimer.php">
    <MissingImmutableAnnotation>
      <code>NewTimer</code>
    </MissingImmutableAnnotation>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[CarbonInterval::make($interval)->totalMilliseconds]]></code>
    </PossiblyNullPropertyFetch>
  </file>
  <file src="src/Internal/Transport/Request/Panic.php">
    <MissingImmutableAnnotation>
      <code>Panic</code>
    </MissingImmutableAnnotation>
  </file>
  <file src="src/Internal/Transport/Request/SideEffect.php">
    <MissingImmutableAnnotation>
      <code>SideEffect</code>
    </MissingImmutableAnnotation>
  </file>
  <file src="src/Internal/Transport/Request/SignalExternalWorkflow.php">
    <MissingImmutableAnnotation>
      <code>SignalExternalWorkflow</code>
    </MissingImmutableAnnotation>
  </file>
  <file src="src/Internal/Transport/Request/UndefinedResponse.php">
    <MissingImmutableAnnotation>
      <code>UndefinedResponse</code>
    </MissingImmutableAnnotation>
  </file>
  <file src="src/Internal/Transport/Request/UpsertSearchAttributes.php">
    <MissingImmutableAnnotation>
      <code>UpsertSearchAttributes</code>
    </MissingImmutableAnnotation>
  </file>
  <file src="src/Internal/Transport/Router/CancelWorkflow.php">
    <DocblockTypeContradiction>
      <code>$process === null</code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/Internal/Transport/Router/DestroyWorkflow.php">
    <UndefinedInterfaceMethod>
      <code>pull</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Internal/Transport/Router/GetWorkerInfo.php">
    <MissingClosureReturnType>
      <code>function (WorkflowPrototype $workflow) {</code>
      <code><![CDATA[static fn (ActivityPrototype $activity) => []]></code>
    </MissingClosureReturnType>
    <UndefinedInterfaceMethod>
      <code>getID</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Internal/Transport/Router/InvokeActivity.php">
    <UndefinedInterfaceMethod>
      <code>getHeader</code>
    </UndefinedInterfaceMethod>
    <UnnecessaryVarAnnotation>
      <code>ActivityContext</code>
    </UnnecessaryVarAnnotation>
  </file>
  <file src="src/Internal/Transport/Router/InvokeQuery.php">
    <PossiblyNullFunctionCall>
      <code><![CDATA[$handler(new QueryInput($name, $request->getPayloads()))]]></code>
    </PossiblyNullFunctionCall>
    <PossiblyUndefinedStringArrayOffset>
      <code><![CDATA[$request->getOptions()['name']]]></code>
    </PossiblyUndefinedStringArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getQueryHandlerNames</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/Internal/Transport/Router/InvokeSignal.php">
    <PossiblyUndefinedStringArrayOffset>
      <code><![CDATA[$request->getOptions()['name']]]></code>
    </PossiblyUndefinedStringArrayOffset>
  </file>
  <file src="src/Internal/Transport/Router/StartWorkflow.php">
    <MissingClosureReturnType>
      <code>function (WorkflowInput $input) use (</code>
    </MissingClosureReturnType>
    <UndefinedInterfaceMethod>
      <code>getHeader</code>
    </UndefinedInterfaceMethod>
    <UnnecessaryVarAnnotation>
      <code>Input</code>
    </UnnecessaryVarAnnotation>
  </file>
  <file src="src/Internal/Transport/Router/WorkflowProcessAwareRoute.php">
    <LessSpecificReturnStatement>
      <code>$process</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>Process</code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Internal/Transport/Server.php">
    <InvalidArgument>
      <code>$request</code>
    </InvalidArgument>
    <MismatchingDocblockParamType>
      <code>RequestInterface</code>
      <code>RequestInterface</code>
    </MismatchingDocblockParamType>
    <MissingClosureParamType>
      <code>$result</code>
      <code>$result</code>
    </MissingClosureParamType>
  </file>
  <file src="src/Internal/Workflow/ActivityProxy.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$handler->getID()]]></code>
      <code><![CDATA[$handler->getID()]]></code>
      <code>$options</code>
      <code>$options</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Internal/Workflow/ActivityStub.php">
    <ArgumentTypeCoercion>
      <code>$name</code>
      <code>$name</code>
    </ArgumentTypeCoercion>
    <ImplicitToStringCast>
      <code>$returnType</code>
    </ImplicitToStringCast>
    <LessSpecificReturnStatement>
      <code><![CDATA[EncodedValues::decodePromise($this->request($request), $returnType)]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>PromiseInterface</code>
    </MoreSpecificReturnType>
    <PossiblyInvalidPropertyAssignmentValue>
      <code>\is_array($header) ? Header::fromValues($header) : $header</code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="src/Internal/Workflow/ChildWorkflowProxy.php">
    <MoreSpecificImplementedParamType>
      <code>$method</code>
    </MoreSpecificImplementedParamType>
    <PossiblyNullArgument>
      <code><![CDATA[$handler?->getReturnType()]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Internal/Workflow/ChildWorkflowStub.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->workflow]]></code>
    </ArgumentTypeCoercion>
    <LessSpecificReturnStatement>
      <code><![CDATA[$execution->then(
            function (WorkflowExecution $execution) use ($name, $args) {
                $request = new SignalExternalWorkflow(
                    $this->getOptions()->namespace,
                    $execution->getID(),
                    $execution->getRunID(),
                    $name,
                    EncodedValues::fromValues($args),
                    true,
                );

                return $this->request($request);
            }
        )]]></code>
      <code><![CDATA[$this->start(...$args)->then(fn() => $this->getResult($returnType))]]></code>
      <code>EncodedValues::decodePromise($started)</code>
    </LessSpecificReturnStatement>
    <MissingParamType>
      <code>$returnType</code>
    </MissingParamType>
    <MoreSpecificReturnType>
      <code>PromiseInterface</code>
      <code>PromiseInterface</code>
      <code>PromiseInterface</code>
    </MoreSpecificReturnType>
    <PossiblyInvalidPropertyAssignmentValue>
      <code>\is_array($header) ? Header::fromValues($header) : $header</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PossiblyNullArgument>
      <code><![CDATA[$this->result]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Internal/Workflow/Input.php">
    <PropertyTypeCoercion>
      <code>$header ?? Header::empty()</code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Internal/Workflow/Process/Process.php">
    <MissingClosureParamType>
      <code>$result</code>
    </MissingClosureParamType>
    <PropertyNotSetInConstructor>
      <code>Process</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Internal/Workflow/Process/Scope.php">
    <MissingClosureParamType>
      <code>$result</code>
    </MissingClosureParamType>
    <MissingClosureReturnType>
      <code>function ($result) {</code>
    </MissingClosureReturnType>
    <PropertyNotSetInConstructor>
      <code>$coroutine</code>
    </PropertyNotSetInConstructor>
    <UndefinedInterfaceMethod>
      <code>catch</code>
      <code>finally</code>
    </UndefinedInterfaceMethod>
    <UnusedClosureParam>
      <code>$e</code>
    </UnusedClosureParam>
  </file>
  <file src="src/Internal/Workflow/Proxy.php">
    <MissingReturnType>
      <code>__call</code>
    </MissingReturnType>
    <PossiblyNullReference>
      <code>getName</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Internal/Workflow/ScopeContext.php">
    <MissingImmutableAnnotation>
      <code>ScopeContext</code>
    </MissingImmutableAnnotation>
    <PropertyNotSetInConstructor>
      <code>$onRequest</code>
      <code>$parent</code>
      <code>$scope</code>
    </PropertyNotSetInConstructor>
    <PropertyTypeCoercion>
      <code><![CDATA[$this->parent->awaits]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Internal/Workflow/WorkflowContext.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$input->maxSupported]]></code>
      <code><![CDATA[$input->minSupported]]></code>
      <code><![CDATA[$input->type]]></code>
      <code>$type</code>
      <code>$type</code>
    </ArgumentTypeCoercion>
    <ImplicitToStringCast>
      <code>$returnType</code>
    </ImplicitToStringCast>
    <InvalidArgument>
      <code>$options</code>
    </InvalidArgument>
    <InvalidNullableReturnType>
      <code>string</code>
    </InvalidNullableReturnType>
    <InvalidReturnStatement>
      <code>new ChildWorkflowProxy(
            $class,
            $workflow,
            $options,
            $this,
        )</code>
      <code>new ContinueAsNewProxy($class, $workflow, $options, $this)</code>
      <code>new ExternalWorkflowProxy($class, $workflow, $stub)</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>object</code>
      <code>object</code>
      <code>object</code>
    </InvalidReturnType>
    <MethodSignatureMismatch>
      <code>$returnType</code>
    </MethodSignatureMismatch>
    <MissingClosureParamType>
      <code>$reason</code>
      <code>$result</code>
    </MissingClosureParamType>
    <MissingClosureReturnType>
      <code><![CDATA[fn() => EncodedValues::decodePromise(]]></code>
      <code>function ($result) use ($conditionGroupId) {</code>
    </MissingClosureReturnType>
    <MissingImmutableAnnotation>
      <code>WorkflowContext</code>
    </MissingImmutableAnnotation>
    <NullableReturnStatement>
      <code><![CDATA[$this->input->info->execution->getRunID()]]></code>
    </NullableReturnStatement>
    <UnsupportedPropertyReferenceUsage>
      <code><![CDATA[$clone->awaits = &$this->awaits]]></code>
      <code><![CDATA[$clone->trace = &$this->trace]]></code>
    </UnsupportedPropertyReferenceUsage>
  </file>
  <file src="src/Promise.php">
    <InvalidArgument>
      <code>$reasons</code>
    </InvalidArgument>
    <InvalidOperand>
      <code>$promisesOrValues</code>
    </InvalidOperand>
    <MissingParamType>
      <code>$promiseOrValue</code>
      <code>$promiseOrValue</code>
    </MissingParamType>
    <TooManyArguments>
      <code>$reduce($c, $value, $i++, $total)</code>
    </TooManyArguments>
    <TooManyTemplateParams>
      <code><![CDATA[PromiseInterface<T>]]></code>
      <code><![CDATA[PromiseInterface<never>]]></code>
      <code><![CDATA[iterable<PromiseInterface<T>|T>]]></code>
    </TooManyTemplateParams>
  </file>
  <file src="src/Worker/ActivityInvocationCache/ActivityInvocationCacheInterface.php">
    <MissingParamType>
      <code>$value</code>
    </MissingParamType>
  </file>
  <file src="src/Worker/ActivityInvocationCache/ActivityInvocationFailure.php">
    <InvalidStringClass>
      <code><![CDATA[new $errorClass($this->errorMessage)]]></code>
    </InvalidStringClass>
    <LessSpecificReturnStatement>
      <code><![CDATA[new $errorClass($this->errorMessage)]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>Throwable</code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Worker/ActivityInvocationCache/ActivityInvocationResult.php">
    <MissingReturnType>
      <code>toValue</code>
    </MissingReturnType>
    <PossiblyNullArgument>
      <code>$dataConverter</code>
    </PossiblyNullArgument>
    <PossiblyUndefinedStringArrayOffset>
      <code><![CDATA[$data['payloads']]]></code>
    </PossiblyUndefinedStringArrayOffset>
  </file>
  <file src="src/Worker/ActivityInvocationCache/InMemoryActivityInvocationCache.php">
    <MissingParamType>
      <code>$value</code>
    </MissingParamType>
    <PossiblyUndefinedStringArrayOffset>
      <code><![CDATA[$request->getOptions()['name']]]></code>
    </PossiblyUndefinedStringArrayOffset>
  </file>
  <file src="src/Worker/ActivityInvocationCache/RoadRunnerActivityInvocationCache.php">
    <ArgumentTypeCoercion>
      <code>$cacheName</code>
      <code>$host</code>
    </ArgumentTypeCoercion>
    <MissingParamType>
      <code>$value</code>
    </MissingParamType>
    <PossiblyUndefinedStringArrayOffset>
      <code><![CDATA[$request->getOptions()['name']]]></code>
    </PossiblyUndefinedStringArrayOffset>
  </file>
  <file src="src/Worker/Environment/Environment.php">
    <PropertyTypeCoercion>
      <code><![CDATA[DateTime::parse($headers[self::HEADER_TICK_TIME], new CarbonTimeZone('UTC'))]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="src/Worker/LoopInterface.php">
    <MissingTemplateParam>
      <code>EventListenerInterface</code>
    </MissingTemplateParam>
  </file>
  <file src="src/Worker/Transport/Codec/JsonCodec.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->maxDepth]]></code>
      <code><![CDATA[$this->maxDepth]]></code>
    </ArgumentTypeCoercion>
    <PossiblyInvalidArgument>
      <code><![CDATA[$e->getCode()]]></code>
      <code><![CDATA[$e->getCode()]]></code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/Worker/Transport/Codec/JsonCodec/Decoder.php">
    <InvalidReturnStatement>
      <code><![CDATA[match (true) {
            isset($command['command']) => $this->parseRequest($command),
            isset($command['failure']) => $this->parseFailureResponse($command),
            default => $this->parseResponse($command),
        }]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>ServerRequestInterface|ResponseInterface</code>
    </InvalidReturnType>
    <MismatchingDocblockReturnType>
      <code>RequestInterface</code>
    </MismatchingDocblockReturnType>
    <PossiblyUndefinedStringArrayOffset>
      <code><![CDATA[$data['failure']]]></code>
      <code><![CDATA[$data['id']]]></code>
      <code><![CDATA[$data['id']]]></code>
    </PossiblyUndefinedStringArrayOffset>
  </file>
  <file src="src/Worker/Transport/Codec/JsonCodec/Encoder.php">
    <PossiblyNullArgument>
      <code><![CDATA[$cmd->getFailure()]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Worker/Transport/Codec/ProtoCodec.php">
    <PossiblyInvalidArgument>
      <code><![CDATA[$e->getCode()]]></code>
      <code><![CDATA[$e->getCode()]]></code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/Worker/Transport/Codec/ProtoCodec/Decoder.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$msg->getCommand()]]></code>
      <code><![CDATA[(int)$msg->getHistoryLength()]]></code>
      <code><![CDATA[(int)$msg->getHistoryLength()]]></code>
      <code><![CDATA[(int)$msg->getHistoryLength()]]></code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code>$header</code>
    </InvalidArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$msg->getFailure()]]></code>
      <code><![CDATA[$msg->getPayloads()]]></code>
      <code><![CDATA[$msg->getPayloads()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>getFields</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Worker/Transport/Codec/ProtoCodec/Encoder.php">
    <PossiblyNullArgument>
      <code><![CDATA[$cmd->getFailure()]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Worker/Transport/Command/Request.php">
    <MissingImmutableAnnotation>
      <code>Request</code>
    </MissingImmutableAnnotation>
    <PossiblyInvalidPropertyAssignmentValue>
      <code>$header ?? Header::empty()</code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="src/Worker/Transport/Command/RequestTrait.php">
    <LessSpecificImplementedReturnType>
      <code>array</code>
      <code>array</code>
      <code>string</code>
      <code>string</code>
    </LessSpecificImplementedReturnType>
    <MoreSpecificReturnType>
      <code>Header</code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Worker/Transport/Command/ServerRequest.php">
    <ImpureMethodCall>
      <code><![CDATA[$options['info']]]></code>
    </ImpureMethodCall>
    <PossiblyInvalidPropertyAssignmentValue>
      <code>$header ?? Header::empty()</code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="src/Worker/Transport/Goridge.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$env->getRPCAddress()]]></code>
      <code>$method</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="src/Worker/Transport/RPCConnectionInterface.php">
    <MissingParamType>
      <code>$payload</code>
    </MissingParamType>
  </file>
  <file src="src/Worker/Transport/RoadRunner.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$env->getRelayAddress()]]></code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction>
      <code>$payload === null</code>
    </DocblockTypeContradiction>
    <InternalClass>
      <code>new Payload($frame, $json)</code>
    </InternalClass>
    <InternalMethod>
      <code>new Payload($frame, $json)</code>
    </InternalMethod>
    <InternalProperty>
      <code><![CDATA[$payload->body]]></code>
      <code><![CDATA[$payload->header]]></code>
    </InternalProperty>
    <PossiblyInvalidArgument>
      <code><![CDATA[$e->getCode()]]></code>
      <code><![CDATA[$e->getCode()]]></code>
      <code><![CDATA[$e->getCode()]]></code>
      <code><![CDATA[$e->getCode()]]></code>
    </PossiblyInvalidArgument>
    <RedundantCondition>
      <code>$result</code>
    </RedundantCondition>
    <TooManyArguments>
      <code>encode</code>
    </TooManyArguments>
    <TypeDoesNotContainNull>
      <code>[]</code>
    </TypeDoesNotContainNull>
  </file>
  <file src="src/Worker/Worker.php">
    <ArgumentTypeCoercion>
      <code>$type</code>
    </ArgumentTypeCoercion>
    <MissingTemplateParam>
      <code>EventEmitterTrait</code>
      <code>EventListenerInterface</code>
    </MissingTemplateParam>
  </file>
  <file src="src/Worker/WorkerFactoryInterface.php">
    <MissingReturnType>
      <code>run</code>
    </MissingReturnType>
  </file>
  <file src="src/Worker/WorkerOptions.php">
    <LessSpecificReturnStatement>
      <code>new self()</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>static</code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/WorkerFactory.php">
    <DeprecatedClass>
      <code>new AnnotationReader()</code>
    </DeprecatedClass>
    <InternalClass>
      <code><![CDATA[new Client($this->responses)]]></code>
    </InternalClass>
    <InternalMethod>
      <code><![CDATA[new Client($this->responses)]]></code>
    </InternalMethod>
    <InvalidArgument>
      <code><![CDATA[$this->onRequest(...)]]></code>
      <code><![CDATA[$this->queues]]></code>
    </InvalidArgument>
    <InvalidReturnStatement>
      <code>new ArrayRepository()</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[RepositoryInterface<WorkerInterface>]]></code>
    </InvalidReturnType>
    <InvalidTemplateParam>
      <code>RepositoryInterface</code>
      <code><![CDATA[RepositoryInterface<WorkerInterface>]]></code>
    </InvalidTemplateParam>
    <MissingTemplateParam>
      <code>EventEmitterTrait</code>
    </MissingTemplateParam>
    <PossiblyUndefinedStringArrayOffset>
      <code>$headers[self::HEADER_TASK_QUEUE]</code>
    </PossiblyUndefinedStringArrayOffset>
    <PropertyNotSetInConstructor>
      <code>$codec</code>
    </PropertyNotSetInConstructor>
    <UndefinedInterfaceMethod>
      <code>dispatch</code>
      <code>dispatch</code>
      <code>dispatch</code>
      <code>update</code>
    </UndefinedInterfaceMethod>
    <UnsafeInstantiation>
      <code>new static(
            $converter ?? DataConverter::createDefault(),
            $rpc ?? Goridge::create(),
        )</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Workflow.php">
    <InvalidReturnStatement>
      <code><![CDATA[self::getCurrentContext()->newActivityStub($class, $options)]]></code>
      <code><![CDATA[self::getCurrentContext()->registerQuery($queryType, $handler)]]></code>
      <code><![CDATA[self::getCurrentContext()->registerSignal($queryType, $handler)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>ScopedContextInterface</code>
      <code>ScopedContextInterface</code>
      <code>T</code>
    </InvalidReturnType>
    <TooManyTemplateParams>
      <code><![CDATA[PromiseInterface<TReturn>]]></code>
      <code><![CDATA[PromiseInterface<UuidInterface>]]></code>
      <code><![CDATA[PromiseInterface<UuidInterface>]]></code>
      <code><![CDATA[PromiseInterface<UuidInterface>]]></code>
      <code><![CDATA[PromiseInterface<bool>]]></code>
      <code><![CDATA[PromiseInterface<int>]]></code>
      <code><![CDATA[PromiseInterface<mixed>]]></code>
      <code><![CDATA[PromiseInterface<null>]]></code>
    </TooManyTemplateParams>
  </file>
  <file src="src/Workflow/CancellationScopeInterface.php">
    <TooManyTemplateParams>
      <code>PromiseInterface</code>
    </TooManyTemplateParams>
  </file>
  <file src="src/Workflow/ChildWorkflowOptions.php">
    <PossiblyNullReference>
      <code>mergeWith</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Workflow/ChildWorkflowStubInterface.php">
    <MissingParamType>
      <code>$returnType</code>
    </MissingParamType>
  </file>
  <file src="src/Workflow/QueryMethod.php">
    <DeprecatedClass>
      <code>NamedArgumentConstructor</code>
    </DeprecatedClass>
  </file>
  <file src="src/Workflow/ReturnType.php">
    <DeprecatedClass>
      <code>NamedArgumentConstructor</code>
    </DeprecatedClass>
  </file>
  <file src="src/Workflow/Saga.php">
    <PossiblyInvalidArgument>
      <code><![CDATA[$e->getCode()]]></code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/Workflow/SignalMethod.php">
    <DeprecatedClass>
      <code>NamedArgumentConstructor</code>
    </DeprecatedClass>
  </file>
  <file src="src/Workflow/WorkflowContextInterface.php">
    <TooManyTemplateParams>
      <code><![CDATA[PromiseInterface<TReturn>]]></code>
      <code><![CDATA[PromiseInterface<UuidInterface>]]></code>
      <code><![CDATA[PromiseInterface<UuidInterface>]]></code>
      <code><![CDATA[PromiseInterface<UuidInterface>]]></code>
      <code><![CDATA[PromiseInterface<bool>]]></code>
      <code><![CDATA[PromiseInterface<mixed>]]></code>
    </TooManyTemplateParams>
  </file>
  <file src="src/Workflow/WorkflowInterface.php">
    <DeprecatedClass>
      <code>NamedArgumentConstructor</code>
    </DeprecatedClass>
  </file>
  <file src="src/Workflow/WorkflowMethod.php">
    <DeprecatedClass>
      <code>NamedArgumentConstructor</code>
    </DeprecatedClass>
  </file>
</files>
